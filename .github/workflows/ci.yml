name: CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - develop

jobs:
  basic_test:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-18.04
          - ubuntu-16.04
          - macos-10.15
        test:
          - c89
          - release

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: tests/run ${{ matrix.test }}

  full_test:
    strategy:
      matrix:
        test:
          - asan seqfail
          - madgc
          - asan slowdispatch
          - asan deepstack
          - valgrind
          - gcov

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Install Valgrind
        if: ${{ matrix.test == 'valgrind' }}
        run: |
          sudo apt update
          sudo apt install valgrind
      - name: Install lcov
        if: ${{ matrix.test == 'gcov' }}
        run: |
          sudo apt update
          sudo apt install lcov
      - name: Test
        run: tests/run ${{ matrix.test }}
      - name: Gather Coverage Data
        if: ${{ matrix.test == 'gcov' }}
        run: |
          mkdir -p coverage
          lcov --capture --directory . --output-file coverage/lcov.info
      - name: Coveralls
        if: ${{ matrix.test == 'gcov' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  windows:
    strategy:
      matrix:
        target:
          - x86
          - x64
        test:
          - c89
          - release

    runs-on: windows-latest

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: diffutils
      - uses: actions/checkout@v2
      - name: Remove link.exe from MSYS2
        shell: msys2 {0}
        run: rm -f /bin/link.exe
      - name: Test
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.target }}
          msys2 -c "tests/run ${{ matrix.test }}"
