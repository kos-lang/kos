name: Package

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version_number: ${{ steps.version.outputs.version_number }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      id: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Set version number
        run: |
          echo "::set-output name=version::${GITHUB_REF#*/*/}"
          echo "::set-output name=version_number::${GITHUB_REF#*/*/v}"
        id: version
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          draft: true
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body: Release ${{ steps.version.outputs.version }}

  default:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-16.04

    runs-on: ${{ matrix.os }}
    needs: release
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v2
      - name: Package
        run: interpreter/create_package.sh ${{ needs.release.outputs.version }}
      - name: Upload release assets
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const path = require('path');
            const fs   = require('fs');
            const glob = require('glob');
            const artifacts_dir = `${process.env.GITHUB_WORKSPACE}/Out/release`;
            const release_id = "${{ needs.release.outputs.id }}";
            glob(artifacts_dir + '/**/*', { nodir: true }, async function(err, files) {
                for (const file of files) {
                    const filename = path.basename(file);
                    console.log(`Uploading ${filename}`);

                    await github.repos.uploadReleaseAsset({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        release_id: release_id,
                        name: filename,
                        data: fs.readFileSync(file)
                    })
                }
            });

  windows:
    runs-on: windows-latest
    needs: release
    timeout-minutes: 10

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: diffutils
      - uses: actions/checkout@v2
      - name: Remove link.exe from MSYS2
        shell: msys2 {0}
        run: rm -f /bin/link.exe
      - name: Add path to WiX Toolset
        run: echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Package
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86
          msys2 -c "interpreter/create_package.sh ${{ needs.release.outputs.version }}"
      - name: Upload release assets
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/tools/github/upload-release-asset.js`);
            const artifacts_dir = `${process.env.GITHUB_WORKSPACE}/Out/release`;
            const release_id = "${{ needs.release.outputs.id }}";
            console.log(script({github, context, artifacts_dir, release_id}));
