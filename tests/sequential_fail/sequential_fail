#!/bin/sh

# Copyright (c) 2014-2020 Chris Dragan
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

set -e

if [ $# -ne 4 ]; then
    echo "Usage: $0 <kos> <output_dir> <start_seq> <seq_len>"
    exit 1
fi

KOS="$1"
OUTPUT="$2/sequential_fail"
BEGIN=$3
END=$(($3 + $4 - 1))

for KOSSEQFAIL in $(seq $BEGIN $END); do
    export KOSSEQFAIL
    RET=0
    "$KOS" -v sequential_fail/sequential_fail.kos -print - -kosarg > "$OUTPUT.stdout" 2> "$OUTPUT.stderr"|| RET=$?

    if [ "$RET" = "0" ]; then
        echo "Note: Test passed at sequence point $KOSSEQFAIL"
        break
    fi

    if [ "$RET" != "1" ]; then
        echo "Failed at sequence point $KOSSEQFAIL with error code $RET (expected 1)"

        echo "--- stdout -------------------------------------------------"
        cat "$OUTPUT.stdout"

        echo "--- stderr -------------------------------------------------"
        cat "$OUTPUT.stderr"

        echo "------------------------------------------------------------"
        exit $RET
    fi
done
