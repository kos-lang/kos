a ( );
b = c ();
d += yield e();

@ 0

(scope 1 1
    (invocation 1 3 paren_open (identifier 1 1 a))
    (assignment 2 3 =
        (left_hand_side 2 3 = (identifier 2 1 b))
        (invocation 2 7 paren_open (identifier 2 5 c))
    )
    (assignment 3 3 +=
        (left_hand_side 3 3 += (identifier 3 1 d))
        (yield 3 6 yield
            (invocation 3 13 paren_open (identifier 3 12 e))
        )
    )
)

@------------------------------------------------------------------------------
x=1+~a(b);

@ 0

(scope 1 1
    (assignment 1 2 =
        (left_hand_side 1 2 = (identifier 1 1 x))
        (operator 1 4 +
            (number 1 3 1)
            (operator 1 5 ~
                (invocation 1 7 paren_open
                    (identifier 1 6 a)
                    (identifier 1 8 b)
    ))))
)

@------------------------------------------------------------------------------
yield a(b+c , d*e, f?g:h, yield i);

@ 0

(scope 1 1
    (yield 1 1 yield
        (invocation 1 8 paren_open
            (identifier 1 7 a)
            (operator 1 10 +
                (identifier 1 9 b)
                (identifier 1 11 c)
            )
            (operator 1 16 *
                (identifier 1 15 d)
                (identifier 1 17 e)
            )
            (operator 1 21 ?:
                (identifier 1 20 f)
                (identifier 1 22 g)
                (identifier 1 24 h)
            )
            (yield 1 27 yield
                (identifier 1 33 i)
    )))
)

@------------------------------------------------------------------------------
a(b(c(d(e(f())))));

@ 0

(scope 1 1
    (invocation 1 2 paren_open
        (identifier 1 1 a)
        (invocation 1 4 paren_open
            (identifier 1 3 b)
            (invocation 1 6 paren_open
                (identifier 1 5 c)
                (invocation 1 8 paren_open
                    (identifier 1 7 d)
                    (invocation 1 10 paren_open
                        (identifier 1 9 e)
                        (invocation 1 12 paren_open
                            (identifier 1 11 f)
    ))))))
)


@------------------------------------------------------------------------------
(a+b)(c+d);

@ 0

(scope 1 1
    (invocation 1 6 paren_open
        (operator 1 3 +
            (identifier 1 2 a)
            (identifier 1 4 b)
        )
        (operator 1 8 +
            (identifier 1 7 c)
            (identifier 1 9 d)
        )
    )
)

@------------------------------------------------------------------------------
a.b;

@ 0

(scope 1 1
    (refinement 1 2 .
        (identifier 1 1 a)
        (string 1 3 b)
    )
)

@------------------------------------------------------------------------------
a.b.c(d,e).f().g();

@ 0

(scope 1 1
    (invocation 1 17 paren_open
        (refinement 1 15 .
            (invocation 1 13 paren_open
                (refinement 1 11 .
                    (invocation 1 6 paren_open
                        (refinement 1 4 .
                            (refinement 1 2 .
                                (identifier 1 1 a)
                                (string 1 3 b)
                            )
                            (string 1 5 c)
                        )
                        (identifier 1 7 d)
                        (identifier 1 9 e)
                    )
                    (string 1 12 f)
                )
            )
            (string 1 16 g)
        )
    )
)

@------------------------------------------------------------------------------
a(0;1)

@ 10 1 4

@------------------------------------------------------------------------------
f(...)

@ 10 1 3

@------------------------------------------------------------------------------
some( 0 ... )

@ 0

(scope 1 1
    (invocation 1 5 paren_open
        (identifier 1 1 some)
        (expand 1 9 ...
            (number 1 7 0)
    ))
)

@------------------------------------------------------------------------------
[0](1, [2]..., 3()..., 4)

@ 0

(scope 1 1
    (invocation 1 4 paren_open
        (array 1 1 [
            (number 1 2 0)
        )
        (number 1 5 1)
        (expand 1 11 ...
            (array 1 8 [
                (number 1 9 2)
        ))
        (expand 1 19 ...
            (invocation 1 17 paren_open
                (number 1 16 3)
        ))
        (number 1 24 4)
    )
)
