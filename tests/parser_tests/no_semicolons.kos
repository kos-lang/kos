print(1)
a = b + c

@ 0

(scope 1 1
    (invocation 1 6 paren_open
        (identifier 1 1 print)
        (number 1 7 1)
    )
    (assignment 2 3 =
        (left_hand_side 2 3 =
            (identifier 2 1 a)
        )
        (operator 2 7 +
            (identifier 2 5 b)
            (identifier 2 9 c)
        )))

@------------------------------------------------------------------------------
return

@ 0

(scope 1 1
    (return 1 1 return)
)

@------------------------------------------------------------------------------
return
a + 1

@ 0

(scope 1 1
    (return 1 1 return
        (operator 2 3 +
            (identifier 2 1 a)
            (number 2 5 1)
        )))

@------------------------------------------------------------------------------
{
    return
}

@ 0

(scope 1 1
    (scope 1 1 {
        (return 2 5 return)
    )
)

@------------------------------------------------------------------------------
var a = (b
-c)

@ 0

(scope 1 1
    (assignment 1 7 =
        (var 1 1 var
            (identifier 1 5 a)
        )
        (operator 2 1 -
            (identifier 1 10 b)
            (identifier 2 2 c)
        )))

@------------------------------------------------------------------------------
var a = (b
[1
[2]])

@ 0

(scope 1 1
    (assignment 1 7 =
        (var 1 1 var
            (identifier 1 5 a)
        )
        (refinement 2 1 [
            (identifier 1 10 b)
            (refinement 3 1 [
                (number 2 2 1)
                (number 3 2 2)
            ))))

@------------------------------------------------------------------------------
{
    (c
    (d))
}

@ 0

(scope 1 1
    (scope 1 1 {
        (invocation 3 5 paren_open
            (identifier 2 6 c)
            (identifier 3 6 d)
        )))

@------------------------------------------------------------------------------
{
    [0]
}

@ 0

(scope 1 1
    (scope 1 1 {
        (array 2 5 [
            (number 2 6 0)
        )))

@------------------------------------------------------------------------------
λ->(a
-b)

@ 0

(scope 1 1
    (function 1 1 λ
        (parameters 1 2 ->)
        (landmark 1 4 paren_open)
        (scope 1 2 ->
            (return 1 2 ->
                (operator 2 1 -
                    (identifier 1 5 a)
                    (identifier 2 2 b)
                )))
        (landmark 2 3 paren_close)
    ))

@------------------------------------------------------------------------------
λ->(a
(b))

@ 0

(scope 1 1
    (function 1 1 λ
        (parameters 1 2 ->)
        (landmark 1 4 paren_open)
        (scope 1 2 ->
            (return 1 2 ->
                (invocation 2 1 paren_open
                    (identifier 1 5 a)
                    (identifier 2 2 b)
                )))
        (landmark 2 4 paren_close)
    ))

@------------------------------------------------------------------------------
λ->(a
[b])

@ 0

(scope 1 1
    (function 1 1 λ
        (parameters 1 2 ->)
        (landmark 1 4 paren_open)
        (scope 1 2 ->
            (return 1 2 ->
                (refinement 2 1 [
                    (identifier 1 5 a)
                    (identifier 2 2 b)
                )))
        (landmark 2 4 paren_close)
    ))

@------------------------------------------------------------------------------
var a = b
-c # Ambiguous

@ 10 2 1

@------------------------------------------------------------------------------
var a = b + c
-d # Ambiguous

@ 10 2 1

@------------------------------------------------------------------------------
var a = b
+c # Ambiguous

@ 10 2 1

@------------------------------------------------------------------------------
var a = b
(c) # Ambiguous

@ 10 2 1

@------------------------------------------------------------------------------
var a = b
[c] # Ambiguous

@ 10 2 1
