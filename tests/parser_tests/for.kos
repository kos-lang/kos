for(;;){}

@ 0

(scope 1 1
    (for 1 1 for
        (empty 1 6 ;)
        (empty 1 7 paren_close)
        (scope 1 8 {)
))

@------------------------------------------------------------------------------
for;;{} # Special case: { is not recognized as object literal

@ 0

(scope 1 1
    (for 1 1 for
        (empty 1 5 ;)
        (empty 1 6 {)
        (scope 1 6 {)
))

@------------------------------------------------------------------------------
for;;i+=1{}

@ 0

(scope 1 1
    (for 1 1 for
        (empty 1 5 ;)
        (expression_list 1 6 i
            (assignment 1 7 +=
                (left_hand_side 1 7 += (identifier 1 6 i))
                (number 1 9 1)
        ))
        (scope 1 10 {)
))

@------------------------------------------------------------------------------
for const a = 1, var b = 2, c(), d + e ;
    f + 3 == 4 && g ;
    h -= 5
{ b = h; }

@ 0

(scope 1 1
    (scope 1 1 for
        (expression_list 1 5 const
            (assignment 1 13 =
                (const 1 5 const (identifier 1 11 a))
                (number 1 15 1)
            )
            (assignment 1 24 =
                (var 1 18 var (identifier 1 22 b))
                (number 1 26 2)
            )
            (invocation 1 30 paren_open
                (identifier 1 29 c)
            )
            (operator 1 36 +
                (identifier 1 34 d)
                (identifier 1 38 e)
        ))
        (for 1 1 for
            (operator 2 16 &&
                (operator 2 11 ==
                    (operator 2 7 +
                        (identifier 2 5 f)
                        (number 2 9 3)
                    )
                    (number 2 14 4)
                )
                (identifier 2 19 g)
            )
            (expression_list 3 5 h
                (assignment 3 7 -=
                    (left_hand_side 3 7 -= (identifier 3 5 h))
                    (number 3 10 5)
                )
            )
            (scope 4 1 {
                (assignment 4 5 =
                    (left_hand_side 4 5 = (identifier 4 3 b))
                    (identifier 4 7 h)
)))))

@------------------------------------------------------------------------------
for{};{};({}){}

@ 0

(scope 1 1
    (scope 1 1 for
        (expression_list 1 4 { (object 1 4 {))
        (for 1 1 for
            (object 1 7 {)
            (expression_list 1 10 paren_open (object 1 11 {))
            (scope 1 14 {)
)))

@------------------------------------------------------------------------------
for({};{};{}){}

@ 0

(scope 1 1
    (scope 1 1 for
        (expression_list 1 5 { (object 1 5 {))
        (for 1 1 for
            (object 1 8 {)
            (expression_list 1 11 { (object 1 11 {))
            (scope 1 14 {)
)))

@------------------------------------------------------------------------------
for((void);(void);(void)){}

@ 0

(scope 1 1
    (scope 1 1 for
        (expression_list 1 5 paren_open (void 1 6 void))
        (for 1 1 for
            (void 1 13 void)
            (expression_list 1 19 paren_open (void 1 20 void))
            (scope 1 26 {)
)))

@------------------------------------------------------------------------------
for;;a*{}{b();}

@ 0

(scope 1 1
    (for 1 1 for
        (empty 1 5 ;)
        (expression_list 1 6 a
            (operator 1 7 *
                (identifier 1 6 a)
                (object 1 8 {)
        ))
        (scope 1 10 {
            (invocation 1 12 paren_open (identifier 1 11 b))
)))

@------------------------------------------------------------------------------
for;var a=0;{} # Expression expected

@ 10 1 5

@------------------------------------------------------------------------------
for;a+=1;{} # Semicolon expected

@ 10 1 6

@------------------------------------------------------------------------------
for const a,b,c=d,e,f,g=h;;{}

@ 0

(scope 1 1
    (scope 1 1 for
        (expression_list 1 5 const
            (multi_assignment 1 16 =
                (const 1 5 const
                    (identifier 1 11 a)
                    (identifier 1 13 b)
                    (identifier 1 15 c)
                )
                (identifier 1 17 d)
            )
            (multi_assignment 1 24 =
                (left_hand_side 1 20 ,
                    (identifier 1 19 e)
                    (identifier 1 21 f)
                    (identifier 1 23 g)
                )
                (identifier 1 25 h)
        ))
        (for 1 1 for
            (empty 1 27 ;)
            (empty 1 28 {)
            (scope 1 28 {)
)))

@------------------------------------------------------------------------------
for;;const a=0{} # Expression expected

@ 10 1 6

@------------------------------------------------------------------------------
for (var i=0; i < 1; var a=i) { } # Expression expected

@ 10 1 22

@------------------------------------------------------------------------------
for ( var a = 0 ; a < 2 ; a += 1 )
{
    b(a);
}

@ 0

(scope 1 1
    (scope 1 1 for
        (expression_list 1 7 var
            (assignment 1 13 =
                (var 1 7 var (identifier 1 11 a))
                (number 1 15 0)
        ))
        (for 1 1 for
            (operator 1 21 <
                (identifier 1 19 a)
                (number 1 23 2)
            )
            (expression_list 1 27 a
                (assignment 1 29 +=
                    (left_hand_side 1 29 += (identifier 1 27 a))
                    (number 1 32 1)
            ))
            (scope 2 1 {
                (invocation 3 6 paren_open
                    (identifier 3 5 b)
                    (identifier 3 7 a)
)))))

@------------------------------------------------------------------------------
for (var a=this;;); # Open curly brace expected

@ 10 1 19

@------------------------------------------------------------------------------
for (var a=this;;) a.b += 1; # Open curly brace expected

@ 10 1 20

@------------------------------------------------------------------------------
for (var a,b,c in yield typeof d ? 1 : 2) {}

@ 0

(scope 1 1
    (for_in 1 1 for
        (in 1 16 in
            (var 1 6 var
                (identifier 1 10 a)
                (identifier 1 12 b)
                (identifier 1 14 c)
            )
            (yield 1 19 yield
                (operator 1 34 ?:
                    (operator 1 25 typeof
                        (identifier 1 32 d)
                    )
                    (number 1 36 1)
                    (number 1 40 2)
        )))
        (scope 1 43 {)
    )
)

@------------------------------------------------------------------------------
for var a in b {}

@ 0

(scope 1 1
    (for_in 1 1 for
        (in 1 11 in
            (var 1 5 var (identifier 1 9 a))
            (identifier 1 14 b)
        )
        (scope 1 16 {)
    )
)

@------------------------------------------------------------------------------
for (const a in b) {} # Var expected

@ 10 1 6

@------------------------------------------------------------------------------
for (var a in b); # Open curly brace expected

@ 10 1 17

@------------------------------------------------------------------------------
for var a,b in c, d;;{} # Open curly brace expected

@ 10 1 17

@------------------------------------------------------------------------------
for (var a in b;;) {} # Close parenthesis expected

@ 10 1 16

@------------------------------------------------------------------------------
for var a = 0; ; a += 1 : # Open curly brace expected

@ 10 1 25

@------------------------------------------------------------------------------
for (var a = 0; ; a += 1 : # Close parenthesis expected

@ 10 1 26
