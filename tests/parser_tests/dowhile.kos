repeat {
    a();
}
while b || c;

repeat {
    d();
}
while typeof e == "";

@ 0

(scope 1 1
    (repeat 1 1 repeat
        (scope 1 8 {
            (invocation 2 6 paren_open (identifier 2 5 a))
        )
        (operator 4 9 ||
            (identifier 4 7 b)
            (identifier 4 12 c)
        )
    )
    (repeat 6 1 repeat
        (scope 6 8 {
            (invocation 7 6 paren_open (identifier 7 5 d))
        )
        (operator 9 16 ==
            (operator 9 7 typeof
                (identifier 9 14 e)
            )
            (string 9 19 "")
    ))
)

@------------------------------------------------------------------------------
repeat {} while true;
repeat {} while (1);

@ 0

(scope 1 1
    (repeat 1 1 repeat
        (scope 1 8 {)
        (bool 1 17 true)
    )
    (repeat 2 1 repeat
        (scope 2 8 {)
        (number 2 18 1)
    )
)

@------------------------------------------------------------------------------
repeat
    a();
while true; # Open curly brace expected

@ 10 2 5

@------------------------------------------------------------------------------
repeat; while true; # Open curly brace expected

@ 10 1 7

@------------------------------------------------------------------------------
repeat {
    a();
}
while; # Expression expected

@ 10 4 6

@------------------------------------------------------------------------------
repeat {} while _ = 1; # Semicolon expected

@ 10 1 19

@------------------------------------------------------------------------------
repeat { } while const a = 1; # Expression expected

@ 10 1 18

@------------------------------------------------------------------------------
repeat { } ; # 'while' expected

@ 10 1 12
