# SPDX-License-Identifier: MIT
# SPDX-FileCopyrightText: Copyright (c) 2014-2024 Chris Dragan

import base.*
import kos

const num_threads     = args.size > 1 ? integer(args[1]) : 2 # 16
const num_iters       = args.size > 2 ? integer(args[2]) : 1 # 10
const max_spawn_level = 0

fun spawn
{
}

fun go_deeper
{
    try {
        kos.collect_garbage()
        const thread = spawn.async()
        thread.wait()
    }
    catch const e { }

    try {
        go_deeper()
    }
    catch const e { }
}

fun thread_func
{
    for const iter in range(num_iters) {
        go_deeper()
    }
}

range(num_threads)
    -> map(() => thread_func.async())
    -> array
    -> each(thread => thread.wait())
