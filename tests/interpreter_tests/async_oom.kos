# SPDX-License-Identifier: MIT
# Copyright (c) 2014-2020 Chris Dragan

import base: buffer, range

const a = [0]
a.reserve(1024)

fun thread
{
    var alloc_size = 32 * 1024 * 1024

    while alloc_size > 1 {

        try {
            a.push(buffer(alloc_size))
        }
        catch const e {
            alloc_size >>= 1
            if alloc_size > 8 {
                try {
                    async a.push(0)
                }
                catch const e { }
            }
            if alloc_size == 2 {
                a.cas(0, 0, 1)
            }
        }
    }
}

for const i in range(2) {
    async thread()
}

while ! a[0] { }
