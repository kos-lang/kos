do {
    fun test(a)
    {
        switch a {

            void  { return 1 }

            true  { return 2 }

            false { return 3 }

            "x"   { return 4 }

            89    { return 5 }
        }
        return void
    }

    assert test(void)  == 1
    assert test(2>1)   == 2
    assert test(2<1)   == 3
    assert test("x")   == 4
    assert test(89)    == 5
    assert test("")    == void
    assert test(12)    == void
    assert test([])    == void
}

do {
    var value = void

    fun mutate { value = 123 }

    switch mutate() { }

    assert value == 123
}

do {
    fun test(x)
    {
        switch x {
            5 { return true }
        }
        return false
    }

    for var i = 0; i < 10; i += 1 {
        assert (i == 5) == test(i)
    }
}

do {
    var a = 1

    switch 8 {
        ... { a = 2 }
    }

    assert a == 2
}

do {
    fun test(a)
    {
        var ret = ""

        switch a + 1 {

            1 {
                ret += "a"
            }

            2 {
                ret += "b"
            }
            fallthrough

            3 {
                ret += "c"
            }

            ... {
                ret += "d"
            }

            4 fallthrough
            5 fallthrough

            6 {
                ret += "e"
            }
        }

        return ret
    }

    assert test(0) == "a"
    assert test(1) == "bc"
    assert test(2) == "c"
    assert test(3) == "e"
    assert test(4) == "e"
    assert test(5) == "e"
    assert test(6) == "d"
    assert test(7) == "d"
}

do {
    var sum = 0
    for var i = 1; i < 10; i += 1 {
        switch i {
            2   fallthrough
            4   fallthrough
            5   { continue }

            ... { sum = sum * 10 + i }

            8   { break }
        }
    }

    assert sum == 1367
}

do {
    fun select(a)
    {
        const x = 1
        const y = 2
        switch (a) {
            x { return 7 }
            y { return 14 }
        }
        return 0
    }

    assert select(1) == 7
    assert select(2) == 14
    assert select(3) == 0
}
