#
# Copyright (c) 2014-2018 Chris Dragan
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#

import base.*

do {
    var caught = false
    try {
        throw "HELL\(0)"
    }
    catch const e {
        caught = e.value
    }
    assert caught
}

do {
    var i = 1
    for const elem in [ 1, 2, 2+1 ] {
        assert elem == i
        i += 1
    }
}

do {
    const line = __line__
    const obj  = { a : line, b : line + 1 }
    for const key, value in shallow(obj) {
        switch key {
            case "a": assert value == line
            case "b": assert value == line + 1
            default:  throw "invalid " + "key"
        }
    }
}

do {
    var idx = void

    fun gen
    {
        for var i = 0; i < 3; i += 1 {
            idx = i
            yield i
        }
    }

    for const value in gen() {
        assert idx == value
    }
}

do {
    const values = [ 1, 2.0, ["x","y"], buffer([3, 4]), {}, ()=>void ];
    const str = stringify.apply(void, values)
    assert str.starts_with("12.0[x, y]<03 04><object><function ")
}
