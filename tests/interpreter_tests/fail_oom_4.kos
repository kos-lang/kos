#
# Copyright (c) 2014-2019 Chris Dragan
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#
do {
    var head = []

    # Initially allocate a lot of persistent memory to speed up triggering OOM during GC
    head.resize(1536 * 1024)

    var idx = 0

    loop {
        # Allocate large, persistent object
        const new_array = []
        new_array.resize(256) # 1024 (32-bit) or 2048 (64-bit) bytes

        # Chain new array
        head[idx] = new_array
        idx += 1

        # Allocate small throw-away object, to be collected by GC
        const throw_away = [ void ]
        throw_away.resize(32) # 128 (32-bit) or 256 (64-bit) bytes
        throw_away[0] = new_array
        head[idx] = throw_away
    }
}
