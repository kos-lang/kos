#!/usr/bin/env kos

import lang.print

constructor new_fib
{
    this.prev = 1
    this.cur  = 1
}

new_fib.set_prototype({

    get_prev: () => (this.prev),
    get_cur:  () => (this.cur),

    reset: fun {
        this.prev = 1
        this.cur  = 1
    },

    set_next: fun(next) {
        this.prev = this.cur
        this.cur  = next
    },

    advance: fun {
        this.set_next( this.get_prev() + this.get_cur() )
    },

    execute: fun(n) {
        for var i = 0; i < n; i += 1 {
            this.advance()
        }
        const ret = this.get_cur()
        this.reset()
        return ret
    }
})

const fib = new_fib()

const orig = fib.execute(50)

for var i = 0; i < 10000; i += 1 {
    assert orig == fib.execute(50)
}

print(orig)
